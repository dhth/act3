name: build

on:
  push:
    branches: [ "main" ]
  pull_request:
    paths:
      - "go.*"
      - "**/*.go"
      - ".github/workflows/*.yml"

permissions:
  contents: read

env:
  GO_VERSION: '1.23.0'

jobs:
  build:
    name: build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: go build
      run: go build -v ./...
    - name: go test
      run: go test -v ./...

  test-run:
    name: test-run
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
    - name: go build
      run: go build .
    - name: Generate GH token
      id: generate-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ vars.GH_TOKEN_APP_ID }}
        private-key: ${{ secrets.GH_TOKEN_APP_PRIVATE_KEY }}
    - name: Run act3 with default output
      run: ./act3
      env:
        GH_TOKEN: ${{ steps.generate-token.outputs.token }}
    - name: Run act3 with tabular output
      run: ./act3 -f table
      env:
        GH_TOKEN: ${{ steps.generate-token.outputs.token }}
    - name: Run act3 with HTML output
      run: ./act3 -f html
      env:
        GH_TOKEN: ${{ steps.generate-token.outputs.token }}
    - name: Test step
      run: |
        ACT3_VERSION=$(curl -s https://api.github.com/repos/dhth/act3/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/' | sed 's/^v//')
        echo "latest version is $ACT3_VERSION"
