name: pr

on:
  pull_request:

env:
  GO_VERSION: '1.24.6'

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      code: ${{ steps.filter.outputs.code }}
      release: ${{ steps.filter.outputs.release }}
      workflows: ${{ steps.filter.outputs.workflows }}
      yml: ${{ steps.filter.outputs.yml }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            code:
              - "internal/**"
              - "**/*.go"
              - "go.*"
              - ".golangci.yml"
              - "main.go"
              - ".github/actions/**"
              - ".github/workflows/pr.yml"
            release:
              - ".goreleaser.yaml"
              - ".github/workflows/pr.yml"
            workflows:
              - ".github/workflows/**.yml"
            yml:
              - "**.yml"
              - "**.yaml"

  build:
    needs: changes
    if: ${{ needs.changes.outputs.code == 'true' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: go build
        run: go build -v ./...

  lint:
    needs: changes
    if: ${{ needs.changes.outputs.code == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1

  test:
    needs: changes
    if: ${{ needs.changes.outputs.code == 'true' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: go test
        env:
          INTEGRATION: '1'
        run: go test -v ./...

  lint-yaml:
    needs: changes
    if: ${{ needs.changes.outputs.yml == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: dhth/composite-actions/.github/actions/lint-yaml@main

  lint-workflows:
    needs: changes
    if: ${{ needs.changes.outputs.workflows == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: dhth/composite-actions/.github/actions/lint-actions@main

  run:
    needs: changes
    if: ${{ github.actor != 'dependabot[bot]' && needs.changes.outputs.code == 'true' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Run
        uses: ./.github/actions/run
        with:
          go_version: ${{ env.GO_VERSION }}
          act3_app_id: ${{ vars.GH_TOKEN_APP_ID }}
          act3_app_private_key: ${{ secrets.GH_TOKEN_APP_PRIVATE_KEY }}

  release-check:
    needs: changes
    if: ${{ needs.changes.outputs.release == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Release check
        uses: goreleaser/goreleaser-action@v6
        with:
          version: 'v2.9.0'
          args: check
